{"version":3,"sources":["components/AddBoardModal.js","components/Header.js","components/Footer.js","components/EmojiPickerButton.js","components/ColorPickerButton.js","components/AddCardModal.js","components/ViewCardModal.js","components/Card.js","components/EditBoardModal.js","components/Board.js","components/ModalContainer.js","default-state.js","App.js","serviceWorker.js","index.js"],"names":["AddBoardModal","props","handleChange","e","setState","boardName","target","value","handleCreate","console","log","newBoard","id","uuidv4","name","state","cards","handleAddBoard","onHide","this","rest","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","className","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","maxLength","Footer","Button","variant","onClick","React","Component","Wrapper","Styled","div","ButtonContainer","onFileChange","files","length","file","currentFile","onImportFile","reader","FileReader","onload","event","handleImportFile","result","readAsText","showImportFileModal","onExportFile","handleExportFile","onShowAddBoardModal","showAddBoardModal","onShowResetPopup","showResetPopup","Navbar","bg","color","Brand","src","process","alt","width","height","DropdownButton","alignRight","title","Dropdown","Item","Divider","show","label","bottomHelpText","hide","handleResetKanban","AlertResetKanban","onConfirm","onCancel","danger","showCancel","confirmBtnBsStyle","confirmBtnText","EmojiPickerButton","handleSelect","emoji","onSelect","native","showPicker","currentEmoji","handleTogglePicker","default","OverlayTrigger","trigger","placement","onToggle","overlay","Popover","showPreview","showSkinTones","ColorPickerButton","handleChangeComplete","currentColor","hex","onChangeComplete","style","backgroundColor","margin","minWidth","AddCardModal","handleChangeName","cardName","handleChangeDesc","cardDesc","handleChangeTagPrimaryEmoji","tagPrimary","handleChangeTagPrimaryColor","handleChangeTagSecondaryEmoji","tagSecondary","handleChangeTagSecondaryColor","handleChangeTagPrimary","handleChangeTagSecondary","handleSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","tags","push","newCard","desc","due","cardDue","pinned","handleAddCard","boardId","defaultState","Date","now","Form","onSubmit","Row","Group","as","Col","controlId","Label","Control","type","minLength","required","md","Prepend","rows","formatStyle","ViewCardModal","card","handleUpdateCard","handleAddTag","tag","tagColor","tagEmoji","tagName","handleRemoveTag","tagId","a","splice","handleDeleteCard","handleChangeTagEmoji","handleChangeTagColor","handleChangeTagName","handleChangeDue","date","handleOnClose","bind","defaultValue","Feedback","tooltip","marginTop","marginLeft","display","padding","minHeight","map","key","Badge","marginRight","Main","isDragging","TopSection","BottomSection","TagContainer","CardPin","DueDate","Card","handleDoubleClick","viewCardModal","handleCloseModal","handlePinClicked","handleUpdatePins","draggableId","index","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","role","data-placement","toLocaleDateString","toLocaleTimeString","EditBoardModal","handleEdit","handleEditBoard","h4","DropdownList","CardContainer","isDraggingOver","AddButton","CustomToggle","forwardRef","children","href","CardList","nextProps","Board","editBoardModalShow","onShowDeletePopup","handleDeleteBoard","board","showDeletePopup","onShowClearPopup","handleClearBoard","showClearPopup","addCardModalShow","Toggle","Menu","droppableId","droppableProps","ModalContainer","showAlertClearBoard","AlertClearBoard","boards","done","boardOrder","App","fileData","JSON","parse","localStorage","setItem","error","document","createElement","Blob","stringify","URL","createObjectURL","download","click","updatedTags","update","allCards","cardIndex","findIndex","cardID","updatedState","updatedBoards","boardCards","slice","forEach","cardId","pop","newBoardName","boardToUpdate","boardOrderIndex","boardID","onDragStart","onDragEndBoard","source","destination","newBoardOrder","Array","from","newState","onDragEndCard","startBoard","endBoard","newCardIds","updatedBoard","startBoardCardIds","updatedStartBoard","endBoardCardIds","updatedEndBoard","onDragEnd","storedState","getItem","overflowX","paddingLeft","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3dd79d0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass AddBoardModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardName: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ boardName: e.target.value });\r\n  };\r\n\r\n  handleCreate = (e) => {\r\n    // Create a new board and add\r\n    console.log(\"Creating New Board...\");\r\n    const newBoard = {\r\n      id: uuidv4(),\r\n      name: this.state.boardName,\r\n      cards: [],\r\n    };\r\n    this.props.handleAddBoard(newBoard);\r\n    this.props.onHide();\r\n  };\r\n\r\n  render() {\r\n    const { handleAddBoard, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Add New Board</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"h5\">Board Name</div>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"\"\r\n              aria-label=\"BoardName\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={this.handleChange}\r\n              maxLength={23}\r\n            />\r\n          </InputGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={this.handleCreate}>\r\n            Create\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBoardModal;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Button, DropdownButton, Dropdown, Modal, Form } from \"react-bootstrap\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport Styled from \"styled-components\";\r\nimport AddBoardModal from \"./AddBoardModal\";\r\nimport { FileSelector } from \"react-rainbow-components\";\r\n\r\nconst Wrapper = Styled.div`\r\n  background-image: linear-gradient(315deg, #045de9 0%, #09c6f9 74%);\r\n`;\r\n\r\nconst ButtonContainer = Styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentFile: null,\r\n      showResetPopup: false,\r\n      showAddBoardModal: false,\r\n      showImportFileModal: false,\r\n    };\r\n  }\r\n\r\n  onFileChange = (files) => {\r\n    console.log(files);\r\n    if (files.length > 0) {\r\n      const file = files[0];\r\n      this.setState({ currentFile: file });\r\n    }\r\n  };\r\n\r\n  onImportFile = () => {\r\n    console.log(this.state.currentFile);\r\n    const reader = new FileReader();\r\n    console.log(reader);\r\n    console.log(this.props);\r\n    reader.onload = (event) => this.props.handleImportFile(event.target.result);\r\n    reader.readAsText(this.state.currentFile);\r\n    this.props.handleImportFile();\r\n    this.setState({ showImportFileModal: false });\r\n  };\r\n\r\n  onExportFile = (event) => {\r\n    this.props.handleExportFile();\r\n  };\r\n\r\n  onShowAddBoardModal = (event) => {\r\n    this.setState({ showAddBoardModal: true });\r\n    console.log(this.props);\r\n  };\r\n\r\n  onShowResetPopup = (event) => {\r\n    this.setState({ showResetPopup: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar bg=\"primary\" variant=\"dark\" color=\"light\">\r\n          <Navbar.Brand className=\"unselectable\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/kanban-logo.png\"}\r\n              alt=\"Logo\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"brandIcon\"\r\n            />\r\n            Mintbean Kanban\r\n          </Navbar.Brand>\r\n          <ButtonContainer>\r\n            <Button\r\n              className=\"ml-2\"\r\n              variant=\"outline-light\"\r\n              onClick={() => this.setState({ showAddBoardModal: true })}\r\n            >\r\n              + Add Board\r\n            </Button>\r\n            <DropdownButton\r\n              alignRight\r\n              className=\"ml-2 d-inline\"\r\n              variant=\"outline-light\"\r\n              title=\"Options\"\r\n            >\r\n              <Dropdown.Item onClick={() => this.setState({ showImportFileModal: true })}>\r\n                Import File\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => this.onExportFile()}>Export File</Dropdown.Item>\r\n              <Dropdown.Item>Settings</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item onClick={this.onShowResetPopup}>Reset Kanban</Dropdown.Item>\r\n            </DropdownButton>\r\n          </ButtonContainer>\r\n        </Navbar>\r\n        <AddBoardModal\r\n          show={this.state.showAddBoardModal}\r\n          handleAddBoard={this.props.handleAddBoard}\r\n          onHide={() => this.setState({ showAddBoardModal: false })}\r\n        />\r\n        <Modal\r\n          aria-labelledby=\"xxx\"\r\n          show={this.state.showImportFileModal}\r\n          onHide={() => this.setState({ showImportFileModal: false })}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"xxx\">Import File</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FileSelector\r\n              className=\"rainbow-m-vertical_x-large rainbow-p-horizontal_medium rainbow-m_auto\"\r\n              label=\"File selector\"\r\n              placeholder=\"Drag & Drop or Click to Browse\"\r\n              bottomHelpText=\"Select only one file\"\r\n              variant=\"multiline\"\r\n              onChange={this.onFileChange}\r\n              bottomHelpText=\"Select only one file\"\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.onImportFile}>\r\n              Import File\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <AlertResetKanban\r\n          show={this.state.showResetPopup}\r\n          hide={() => this.setState({ showResetPopup: false })}\r\n          handleResetKanban={this.props.handleResetKanban}\r\n        ></AlertResetKanban>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nclass AlertResetKanban extends Component {\r\n  onConfirm = () => {\r\n    console.log(\"Confirm\");\r\n    this.props.handleResetKanban();\r\n    this.props.hide();\r\n  };\r\n\r\n  onCancel = () => {\r\n    console.log(\"Cancel\");\r\n    this.setState({ show: false });\r\n    this.props.hide();\r\n  };\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    return (\r\n      <SweetAlert\r\n        danger\r\n        showCancel\r\n        confirmBtnBsStyle=\"danger\"\r\n        confirmBtnText=\"Reset Kanban\"\r\n        title=\"Are You Sure You Want to Reset The Kanban?\"\r\n        onConfirm={this.onConfirm}\r\n        onCancel={this.onCancel}\r\n        show={show}\r\n      >\r\n        This will permanently remove all of your boards and cards!\r\n      </SweetAlert>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Wrapper = Styled.div`\r\n  color: white;\r\n  margin: 0px;\r\n  float: bottom;\r\n  margin: 0 auto -155px;\r\n`;\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <Wrapper>\r\n      <Navbar bg=\"secondary\" variant=\"light\">\r\n        Created by Josh Matsushima, Ryan Mileris, Scott Krysten\r\n        <div className=\"ml-auto\">\r\n          <img src={process.env.PUBLIC_URL + \"/icons8-github-60.png\"} alt=\"Github logo\" />\r\n        </div>\r\n      </Navbar>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Button, Popover, OverlayTrigger } from \"react-bootstrap\";\r\nimport Styled from \"styled-components\";\r\n\r\n// When emoji button has no selection - greyed out\r\nconst Unset = Styled.div`\r\n  color: \"grey\" !important;\r\n  background-color: \"grey\";\r\n`;\r\n\r\nclass EmojiPickerButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPicker: false,\r\n      currentEmoji: props.default,\r\n    };\r\n    this.props.onSelect(props.default);\r\n  }\r\n\r\n  // Toggle the emoji picker when clicked\r\n  handleSelect = (emoji) => {\r\n    console.log(emoji);\r\n    // Call passed in prop for when value changed\r\n    this.props.onSelect(emoji.native);\r\n    this.setState({ showPicker: false, currentEmoji: emoji.native });\r\n  };\r\n\r\n  handleTogglePicker = (emoji) => {\r\n    console.log(\"Toggle\");\r\n    this.setState({ showPicker: !this.state.showPicker });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        onClick={this.handleTogglePicker}\r\n        onToggle={this.state.showPicker}\r\n        overlay={\r\n          <Popover>\r\n            <Picker onSelect={this.handleSelect} showPreview={false} showSkinTones={false}></Picker>\r\n          </Popover>\r\n        }\r\n      >\r\n        <Button variant=\"secondary\">{this.state.currentEmoji}</Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmojiPickerButton;\r\n","import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Button, Popover, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nclass ColorPickerButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPicker: false,\r\n      currentColor: { hex: props.default },\r\n    };\r\n  }\r\n\r\n  handleChangeComplete = (color) => {\r\n    console.log(color);\r\n    // Call passed in prop for when value changed\r\n    this.setState({ showPicker: false, currentColor: color });\r\n    this.props.onSelect(color.hex);\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ currentColor: color });\r\n  };\r\n\r\n  handleTogglePicker = (emoji) => {\r\n    console.log(\"Toggle\");\r\n    this.setState({ showPicker: !this.state.showPicker });\r\n  };\r\n\r\n  render() {\r\n    const { showPicker, currentColor } = this.state;\r\n    return (\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        onClick={this.handleTogglePicker}\r\n        onToggle={showPicker}\r\n        overlay={\r\n          <Popover>\r\n            <SketchPicker\r\n              color={currentColor}\r\n              onChange={this.handleChange}\r\n              onChangeComplete={this.handleChangeComplete}\r\n            ></SketchPicker>\r\n          </Popover>\r\n        }\r\n      >\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{\r\n            backgroundColor: currentColor.hex,\r\n            margin: \"0 0 !important\",\r\n            minWidth: \"48px\",\r\n          }}\r\n        ></Button>\r\n      </OverlayTrigger>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPickerButton;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form, FormControl, FormText, Col, InputGroup } from \"react-bootstrap\";\r\nimport { Field, DateTimePicker, MenuDivider } from \"react-rainbow-components\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Styled from \"styled-components\";\r\n\r\nimport EmojiPickerButton from \"./EmojiPickerButton\";\r\nimport ColorPickerButton from \"./ColorPickerButton\";\r\n\r\nclass AddCardModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.defaultState = {\r\n      cardName: \"\",\r\n      tagPrimary: {\r\n        name: \"\",\r\n        emoji: \"\",\r\n        color: \"green\",\r\n      },\r\n      tagSecondary: {\r\n        name: \"\",\r\n        emoji: \"\",\r\n        color: \"red\",\r\n      },\r\n      cardDesc: \"\",\r\n      cardDue: new Date(Date.now()),\r\n    };\r\n\r\n    this.state = {\r\n      ...this.defaultState,\r\n    };\r\n  }\r\n\r\n  handleChangeName = (e) => {\r\n    this.setState({ cardName: e.target.value });\r\n  };\r\n\r\n  handleChangeDesc = (e) => {\r\n    this.setState({ cardDesc: e.target.value });\r\n  };\r\n\r\n  handleChangeTagPrimaryEmoji = (emoji) => {\r\n    console.log(emoji);\r\n    this.setState({\r\n      tagPrimary: {\r\n        ...this.state.tagPrimary,\r\n        emoji: emoji,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeTagPrimaryColor = (color) => {\r\n    this.setState({\r\n      tagPrimary: {\r\n        ...this.state.tagPrimary,\r\n        color: color,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeTagSecondaryEmoji = (emoji) => {\r\n    this.setState({\r\n      tagSecondary: {\r\n        ...this.state.tagSecondary,\r\n        emoji: emoji,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeTagSecondaryColor = (color) => {\r\n    this.setState({\r\n      tagSecondary: {\r\n        ...this.state.tagSecondary,\r\n        color: color,\r\n      },\r\n    });\r\n    console.log(\"Set Color: \", color);\r\n  };\r\n\r\n  handleChangeTagPrimary = (e) => {\r\n    this.setState({\r\n      tagPrimary: {\r\n        ...this.state.tagPrimary,\r\n        name: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeTagSecondary = (e) => {\r\n    this.setState({\r\n      tagSecondary: {\r\n        ...this.state.tagSecondary,\r\n        name: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    // Prevent reload of page\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n\r\n    if (!form.checkValidity()) {\r\n      console.log(\"Card is Invalid!\");\r\n      e.stopPropagation();\r\n    }\r\n\r\n    // Create a new card and add to board\r\n    console.log(\"Card id valid\");\r\n\r\n    // Temporary solution for tags (limit to primary + secondary)\r\n    let tags = [];\r\n    if (this.state.tagPrimary !== \"\") {\r\n      tags.push({\r\n        id: uuidv4(),\r\n        name: `${this.state.tagPrimary.emoji} ${this.state.tagPrimary.name}`,\r\n        color: this.state.tagPrimary.color,\r\n      });\r\n    }\r\n    if (!this.state.tagSecondary !== \"\") {\r\n      tags.push({\r\n        id: uuidv4(),\r\n        name: `${this.state.tagSecondary.emoji} ${this.state.tagSecondary.name}`,\r\n        color: this.state.tagSecondary.color,\r\n      });\r\n    }\r\n\r\n    const newCard = {\r\n      id: uuidv4(),\r\n      name: this.state.cardName,\r\n      tags: tags, // Currently not supported // this.state.cardTags,\r\n      desc: this.state.cardDesc,\r\n      due: this.state.cardDue,\r\n      pinned: false,\r\n    };\r\n\r\n    console.log(newCard);\r\n\r\n    this.props.handleAddCard(newCard, this.props.boardId);\r\n\r\n    this.setState(this.defaultState);\r\n    this.props.onHide();\r\n  };\r\n\r\n  render() {\r\n    const { handleAddCard, boardId, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Add New Card</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"cardName\">\r\n                <Form.Label>Card Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"cardName\"\r\n                  placeholder=\"Enter a Card Name\"\r\n                  minLength={1}\r\n                  maxLength={100}\r\n                  onChange={this.handleChangeName}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={5} controlId=\"tag-primary\">\r\n                <Form.Label>Primary Tag</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <EmojiPickerButton\r\n                      default=\"🐛\"\r\n                      onSelect={this.handleChangeTagPrimaryEmoji}\r\n                    ></EmojiPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <InputGroup.Prepend>\r\n                    <ColorPickerButton\r\n                      default=\"#00FF00\"\r\n                      onSelect={this.handleChangeTagPrimaryColor}\r\n                    ></ColorPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a Primary Tag\"\r\n                    onChange={this.handleChangeTagPrimary}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={5} controlId=\"tag-secondary\">\r\n                <Form.Label>Secondary Tag</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <EmojiPickerButton\r\n                      default=\"🚀\"\r\n                      onSelect={this.handleChangeTagSecondaryEmoji}\r\n                    ></EmojiPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <InputGroup.Prepend>\r\n                    <ColorPickerButton\r\n                      default=\"#FF0000\"\r\n                      onSelect={this.handleChangeTagSecondaryColor}\r\n                    ></ColorPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a Secondary Tag\"\r\n                    onChange={this.handleChangeTagSecondary}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"desc\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"4\" onChange={this.handleChangeDesc} />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={3} controlId=\"date\">\r\n                <Form.Label>Due Date</Form.Label>\r\n                <DateTimePicker\r\n                  value={this.state.cardDue}\r\n                  onChange={(value) => this.setState({ cardDue: value })}\r\n                  formatStyle=\"medium\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <hr />\r\n            <Button type=\"submit\" variant=\"success\">\r\n              Add Card\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCardModal;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Modal,\r\n  InputGroup,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n  Badge,\r\n  Col,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { DateTimePicker } from \"react-rainbow-components\";\r\nimport Styled from \"styled-components\";\r\nimport { Github } from \"react-color\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport EmojiPickerButton from \"./EmojiPickerButton\";\r\nimport ColorPickerButton from \"./ColorPickerButton\";\r\n\r\n/**\r\n * Modal which expands with complete card information such as a larger description, date created, etc.\r\n */\r\nclass ViewCardModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tagEmoji: \"🐛\",\r\n      tagColor: \"#00FF00\",\r\n      tagName: \"\",\r\n    };\r\n    this.handleOnClose = this.handleOnClose.bind(this);\r\n  }\r\n\r\n  handleChangeName = (event) => {\r\n    this.props.card.name = event.target.value;\r\n    this.handleUpdateCard();\r\n  };\r\n\r\n  handleChangeDesc = (event) => {\r\n    this.props.card.desc = event.target.value;\r\n    this.handleUpdateCard();\r\n  };\r\n\r\n  handleAddTag = () => {\r\n    const id = uuidv4();\r\n    const tag = {\r\n      id: id,\r\n      color: this.state.tagColor,\r\n      name: `${this.state.tagEmoji} ${this.state.tagName}`,\r\n    };\r\n    this.props.card.tags.push(tag);\r\n    this.handleUpdateCard();\r\n  };\r\n\r\n  handleRemoveTag = (tagId) => {\r\n    let a = 0;\r\n    for (; a < this.props.card.tags.length; a++) {\r\n      if (this.props.card.tags[a].id === tagId) {\r\n        break;\r\n      }\r\n    }\r\n    this.props.card.tags.splice(a, 1);\r\n    this.handleUpdateCard();\r\n  };\r\n\r\n  handleUpdateCard = (event) => {\r\n    console.log(\"Hello Boi\", this.props.card);\r\n    this.props.handleUpdateCard(this.props.card, this.props.boardId);\r\n  };\r\n\r\n  handleDeleteCard = (event) => {\r\n    this.props.handleDeleteCard(this.props.card, this.props.boardId);\r\n  };\r\n\r\n  handleChangeTagEmoji = (emoji) => {\r\n    this.setState({ tagEmoji: emoji });\r\n  };\r\n  handleChangeTagColor = (color) => {\r\n    this.setState({ tagColor: color });\r\n  };\r\n  handleChangeTagName = (event) => {\r\n    this.setState({ tagName: event.target.value });\r\n  };\r\n\r\n  handleChangeDue = (date) => {\r\n    this.props.card.due = date;\r\n    this.handleUpdateCard();\r\n  };\r\n\r\n  handleOnClose() {\r\n    this.props.onHide();\r\n  }\r\n\r\n  render() {\r\n    const { handleUpdateCard, handleDeleteCard, card, boardId, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">View Card</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"cardName\">\r\n                <Form.Label>Card Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"cardName\"\r\n                  defaultValue={this.props.card.name}\r\n                  onChange={(value) => this.handleChangeName(value)}\r\n                  minLength={1}\r\n                  maxLength={100}\r\n                  required={true}\r\n                />\r\n                <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={7} controlId=\"tag-primary\">\r\n                <Form.Label style={{ marginTop: \"12px\" }}>Add Tag</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <EmojiPickerButton\r\n                      default=\"🐛\"\r\n                      onSelect={this.handleChangeTagEmoji}\r\n                    ></EmojiPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <InputGroup.Prepend>\r\n                    <ColorPickerButton\r\n                      default=\"#00FF00\"\r\n                      onSelect={this.handleChangeTagColor}\r\n                    ></ColorPickerButton>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a Tag Name\"\r\n                    onChange={this.handleChangeTagName}\r\n                    maxLength={50}\r\n                  />\r\n                  <Button onClick={() => this.handleAddTag()} style={{ marginLeft: \"8px\" }}>\r\n                    Add Tag\r\n                  </Button>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"tag-container\">\r\n                <div\r\n                  className=\"border\"\r\n                  style={{\r\n                    display: \"block\",\r\n                    color: \"white\",\r\n                    width: \"100%\",\r\n                    padding: \"4px\",\r\n                    minHeight: \"84px\",\r\n                  }}\r\n                >\r\n                  {this.props.card.tags.map((tag) => (\r\n                    <div key={tag.id} className=\"d-inline\">\r\n                      <Badge\r\n                        style={{\r\n                          backgroundColor: tag.color,\r\n                          marginRight: \"4px\",\r\n                        }}\r\n                      >\r\n                        {tag.name}\r\n                        <Button\r\n                          style={{ padding: \"0px\", marginLeft: \"4px\" }}\r\n                          size=\"sm\"\r\n                          onClick={() => this.handleRemoveTag(tag.id)}\r\n                        >\r\n                          &times;\r\n                        </Button>\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"lgdesc\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"4\"\r\n                  defaultValue={this.props.card.desc}\r\n                  onChange={this.handleChangeDesc}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={4} controlId=\"date\">\r\n                <Form.Label>Due Date</Form.Label>\r\n                <DateTimePicker\r\n                  value={this.props.card.due}\r\n                  onChange={this.handleChangeDue}\r\n                  formatStyle=\"medium\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={this.handleDeleteCard}>\r\n            Delete\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={this.handleOnClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewCardModal;\r\n","import React, { Component } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport ViewCardModal from \"./ViewCardModal\";\r\n\r\nconst Main = Styled.div`\r\n  margin-bottom: 8px;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  box-shadow: 1px 1px 2px;\r\n  background-color: ${(props) => (props.isDragging ? \"lightgrey\" : \"white\")};\r\n`;\r\n\r\nconst TopSection = Styled.div`\r\n  display: block;\r\n  word-wrap: break-word;\r\n  white-space: nowrap;\r\n  white-space: initial;\r\n`;\r\n\r\nconst BottomSection = Styled.div`\r\n  display: block;\r\n`;\r\n\r\nconst TagContainer = Styled.div`\r\n  display: block;\r\n  margin-right: 4px;\r\n  color: white;\r\n  > span {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst CardPin = Styled.div`\r\n  display: inline-block;\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DueDate = Styled.div`\r\n  display: inline-block;\r\n  color; red;\r\n  opacity: 50%;\r\n`;\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewCardModal: false,\r\n    };\r\n  }\r\n\r\n  handleDoubleClick = () => {\r\n    console.log(\"Showing Card Modal\");\r\n    this.setState({ viewCardModal: true });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    console.log(\"Hiding the Modal\");\r\n    this.setState({ viewCardModal: false });\r\n  };\r\n\r\n  handlePinClicked = () => {\r\n    this.props.card.pinned = !this.props.card.pinned;\r\n    this.props.handleUpdatePins(this.props.boardId, this.props.card.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Draggable\r\n        draggableId={this.props.card.id}\r\n        index={this.props.index}\r\n        isDragDisabled={this.props.card.pinned}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <Main\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            onDoubleClick={this.handleDoubleClick}\r\n          >\r\n            <TopSection>\r\n              <TagContainer>\r\n                {this.props.card.tags.map((tag) => (\r\n                  <Badge key={tag.id} style={{ backgroundColor: tag.color }}>\r\n                    {tag.name}\r\n                  </Badge>\r\n                ))}\r\n              </TagContainer>\r\n              {this.props.card.name}\r\n            </TopSection>\r\n            <BottomSection>\r\n              <DueDate>\r\n                <span role=\"img\" aria-label=\"due\" data-placement=\"top\" title=\"Tooltip on top\">\r\n                  🕒\r\n                </span>{\" \"}\r\n                {new Date(this.props.card.due).toLocaleDateString()} |{\" \"}\r\n                {new Date(this.props.card.due).toLocaleTimeString()}\r\n              </DueDate>\r\n              <CardPin></CardPin>\r\n            </BottomSection>\r\n            <ViewCardModal\r\n              show={this.state.viewCardModal}\r\n              onHide={this.handleCloseModal}\r\n              handleUpdateCard={this.props.handleUpdateCard}\r\n              handleDeleteCard={this.props.handleDeleteCard}\r\n              boardId={this.props.boardId}\r\n              card={this.props.card}\r\n            ></ViewCardModal>\r\n          </Main>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nclass EditBoardModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardName: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ boardName: e.target.value });\r\n  };\r\n\r\n  handleEdit = (e) => {\r\n    // Edit board name of existing board\r\n    console.log(\"Edit Board Name...\");\r\n    this.props.handleEditBoard(this.state.boardName, this.props.boardId);\r\n    this.props.onHide();\r\n  };\r\n\r\n  render() {\r\n    const { handleEditBoard, boardName, boardId, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Change Board Name</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>Board Name</h5>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder={this.props.boardName}\r\n              aria-label=\"BoardName\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={this.handleChange}\r\n              maxLength={23}\r\n            />\r\n          </InputGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={this.handleEdit}>\r\n            Edit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditBoardModal;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Dropdown } from \"react-bootstrap\";\r\nimport Styled from \"styled-components\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { SweetAlert } from \"react-bootstrap-sweetalert\";\r\n\r\nimport AddCardModal from \"./AddCardModal\";\r\nimport Card from \"./Card\";\r\nimport EditBoardModal from \"./EditBoardModal\";\r\n\r\nconst Main = Styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  min-width: 400px;\r\n  background-color: #10aeb2;\r\n  padding: 16px;\r\n  margin-right: 16px;\r\n  margin-bottom: 48px;\r\n  margin-left: 16px;\r\n  margin-top: 48px;\r\n  box-shadow: 2px 2px 4px;\r\n`;\r\n\r\nconst TopSection = Styled.div`\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Title = Styled.h4`\r\n  margin-top: 4px;\r\n  display: inline-block;\r\n  margin-right: auto;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst DropdownList = Styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst CardContainer = Styled.div`\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  padding-top: 8px;\r\n  margin-bottom: 8px;\r\n  min-height: 64px;\r\n  transition: background-color 0.4s ease;\r\n  background-color: ${(props) => (props.isDraggingOver ? \"#ecf284\" : \"#17deee\")};\r\n`;\r\n\r\nconst BottomSection = Styled.div`\r\n  display: block;\r\n`;\r\n\r\nconst AddButton = Styled.div`\r\n  background-color: \"#043334\";\r\n  color: white;\r\n`;\r\n\r\n// A custom dropdown menu for the board (three vertical dots).\r\n// Needs to be customized, otherwise dropdown menu is a button by default and\r\n// includes a downward arrow icon which looks strange.\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <div\r\n    href=\"\"\r\n    ref={ref}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n    <div className=\"threedots\"></div>\r\n  </div>\r\n));\r\n\r\nclass CardList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    // Only update when cards has changed.\r\n    return !(nextProps.cards === this.props.cards);\r\n  }\r\n\r\n  render() {\r\n    return this.props.cards.map((card, index) => (\r\n      <Card\r\n        key={card.id}\r\n        card={card}\r\n        index={index}\r\n        handleUpdateCard={this.props.handleUpdateCard}\r\n        handleDeleteCard={this.props.handleDeleteCard}\r\n        handleUpdatePins={this.props.handleUpdatePins}\r\n        boardId={this.props.boardId}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editBoardModalShow: false,\r\n      addCardModalShow: false,\r\n      showDeletePopup: false,\r\n      showClearPopup: false,\r\n    };\r\n  }\r\n\r\n  handleEditBoard = () => {\r\n    this.setState({ editBoardModalShow: true });\r\n  };\r\n\r\n  onShowDeletePopup = (event) => {\r\n    this.props.handleDeleteBoard(this.props.board.id);\r\n    // TODO - HANDLE DELETE BOARD IN POPUP\r\n    this.setState({ showDeletePopup: true });\r\n  };\r\n\r\n  onShowClearPopup = (event) => {\r\n    this.props.handleClearBoard(this.props.board.id);\r\n    // TODO - HANDLE CLEAR IN POPUP\r\n    this.setState({ showClearPopup: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.board.id} index={this.props.index}>\r\n        {(provided) => (\r\n          <Main {...provided.draggableProps} ref={provided.innerRef} className=\"rounded\">\r\n            <TopSection {...provided.dragHandleProps}>\r\n              <Title className=\"h4 text-light\">{this.props.board.name}</Title>\r\n              <DropdownList>\r\n                <Dropdown alignRight={true}>\r\n                  <Dropdown.Toggle as={CustomToggle}></Dropdown.Toggle>\r\n                  <Dropdown.Menu size=\"sm\" title=\"\">\r\n                    <Dropdown.Header>Options</Dropdown.Header>\r\n                    <Dropdown.Item onClick={this.handleEditBoard}>Edit Board</Dropdown.Item>\r\n                    <Dropdown.Divider></Dropdown.Divider>\r\n                    <Dropdown.Item onClick={this.onShowClearPopup}>Clear Board</Dropdown.Item>\r\n                    <Dropdown.Item onClick={this.onShowDeletePopup}>Delete Board</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </DropdownList>\r\n            </TopSection>\r\n            <Droppable droppableId={this.props.board.id} type=\"card\">\r\n              {(provided, snapshot) => (\r\n                <CardContainer\r\n                  className=\"rounded\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <CardList\r\n                    cards={this.props.cards}\r\n                    handleUpdateCard={this.props.handleUpdateCard}\r\n                    handleDeleteCard={this.props.handleDeleteCard}\r\n                    handleUpdatePins={this.props.handleUpdatePins}\r\n                    boardId={this.props.board.id}\r\n                  ></CardList>\r\n                  {provided.placeholder}\r\n                </CardContainer>\r\n              )}\r\n            </Droppable>\r\n            <BottomSection>\r\n              <AddButton>\r\n                <Button onClick={() => this.setState({ addCardModalShow: true })}>+</Button>\r\n              </AddButton>\r\n            </BottomSection>\r\n            <EditBoardModal\r\n              show={this.state.editBoardModalShow}\r\n              boardId={this.props.board.id}\r\n              boardName={this.props.board.name}\r\n              handleEditBoard={this.props.handleEditBoard}\r\n              onHide={() => this.setState({ editBoardModalShow: false })}\r\n            />\r\n            <AddCardModal\r\n              show={this.state.addCardModalShow}\r\n              boardId={this.props.board.id}\r\n              handleAddCard={this.props.handleAddCard}\r\n              onHide={() => this.setState({ addCardModalShow: false })}\r\n            />\r\n          </Main>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nclass ModalContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAlertClearBoard: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AlertClearBoard\r\n        show={this.state.showAlertClearBoard}\r\n        hide={() => this.setState({ showAlertClearBoard: false })}\r\n        handleClearBoard={this.props.handleClearBoard}\r\n      ></AlertClearBoard>\r\n    );\r\n  }\r\n}\r\n\r\nclass AlertClearBoard extends Component {\r\n  onConfirm = () => {\r\n    console.log(\"Confirm\");\r\n    // Call Clear Board\r\n    this.props.hide();\r\n  };\r\n\r\n  onCancel = () => {\r\n    console.log(\"Cancel\");\r\n    this.props.hide();\r\n  };\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n    return (\r\n      <SweetAlert\r\n        danger\r\n        showCancel\r\n        confirmBtnBsStyle=\"danger\"\r\n        confirmBtnText=\"Reset Kanban\"\r\n        title=\"Are You Sure You Want to Clear the Board?\"\r\n        onConfirm={this.onConfirm}\r\n        onCancel={this.onCancel}\r\n        show={show}\r\n      >\r\n        This will permanently remove all cards on the board!\r\n      </SweetAlert>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalContainer;\r\n","// Initial Board State (Required by Hackathon Rules)\r\nconst defaultState = {\r\n  tags: {},\r\n  cards: {},\r\n  boards: {\r\n    \"to-do\": {\r\n      id: \"to-do\",\r\n      name: \"To Do\",\r\n      cards: [],\r\n    },\r\n    \"in-progress\": {\r\n      id: \"in-progress\",\r\n      name: \"In Progress\",\r\n      cards: [],\r\n    },\r\n    done: {\r\n      id: \"done\",\r\n      name: \"Done\",\r\n      cards: [],\r\n    },\r\n  },\r\n  boardOrder: [\"to-do\", \"in-progress\", \"done\"],\r\n};\r\n\r\nexport default defaultState;\r\n","import React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Board from \"./components/Board\";\nimport ModalContainer from \"./components/ModalContainer\";\n\n// TEMPORARY\nimport defaultState from \"./default-state\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    try {\n      let storedState = localStorage.getItem(\"kanban-state\");\n      storedState = storedState === null ? null : JSON.parse(storedState);\n      this.state = storedState || defaultState;\n    } catch (error) {\n      console.log(\"Got Bad Data!  Resorting to Default State\");\n      this.state = defaultState;\n    }\n    this.handleResetKanban.bind(this);\n    this.handleAddCard.bind(this);\n    this.handleUpdateCard.bind(this);\n    this.handleUpdateCard.bind(this);\n    this.handleDeleteCard.bind(this);\n    this.handleAddBoard.bind(this);\n    this.handleClearBoard.bind(this);\n    this.handleEditBoard.bind(this);\n    this.handleDeleteBoard.bind(this);\n  }\n\n  handleUpdatePins = (card, boardId) => {\n    //this.handleAddCard(card, boardId);\n  };\n\n  handleImportFile = (fileData) => {\n    try {\n      this.setState(JSON.parse(fileData), () => {\n        localStorage.setItem(\"kanban-state\", fileData);\n      });\n    } catch (error) {\n      // Display error prompt\n    }\n  };\n\n  handleExportFile = () => {\n    var a = document.createElement(\"a\");\n    var file = new Blob([JSON.stringify(this.state)], { type: \"text/plain\" });\n    a.href = URL.createObjectURL(file);\n    a.download = \"a.json\";\n    a.click();\n  };\n\n  handleResetKanban = () => {\n    console.log(\"Resetting the Kanban!\");\n    // Update local storage\n    localStorage.setItem(\"kanban-state\", JSON.stringify(defaultState));\n    console.log(defaultState);\n    // Modify current state\n    console.log(this);\n    this.setState(JSON.parse(JSON.stringify(defaultState)), () =>\n      console.log(`This is the default state:`, defaultState)\n    );\n  };\n\n  // ==============================================\n  // CARD UPDATES\n  // ==============================================\n  handleAddCard = (card, boardId) => {\n    console.log(\"\\n\", `Adding card to board ${boardId}`);\n    let updatedTags = { ...this.state.tags };\n    for (const tag of card.tags) {\n      updatedTags = { ...updatedTags, [tag.id]: tag };\n    }\n\n    // Normalize Card Tag Array\n    card.tags = card.tags.map((tag) => tag.id);\n\n    const update = {\n      ...this.state,\n      tags: updatedTags,\n      // Add card to dictionary of cards\n      cards: { ...this.state.cards, [card.id]: card },\n      // Add card to board\n      boards: {\n        ...this.state.boards,\n        [boardId]: {\n          ...this.state.boards[boardId],\n          cards: [...this.state.boards[boardId].cards, card.id],\n        },\n      },\n    };\n\n    this.setState(update, () => {\n      console.log(\"Saved New Card!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  handleUpdateCard = (card, boardId) => {\n    console.log(\"\\n\", `Adding card to board ${boardId}`);\n    let updatedTags = { ...this.state.tags };\n    for (const tag of card.tags) {\n      updatedTags = { ...updatedTags, [tag.id]: tag };\n    }\n    console.log(card);\n\n    // Normalize Card Tag Array\n    card.tags = card.tags.map((tag) => tag.id);\n\n    const update = {\n      ...this.state,\n      tags: updatedTags,\n      // Add card to dictionary of cards\n      cards: { ...this.state.cards, [card.id]: card },\n    };\n\n    this.setState(update, () => {\n      console.log(\"Saved New Card!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  handleDeleteCard = (card, boardId) => {\n    let allCards = this.state.cards;\n    delete allCards[card.id];\n\n    let board = this.state.boards[boardId];\n    let cardIndex = board.cards.findIndex((cardID) => cardID === card.id);\n    board.cards.splice(cardIndex, 1);\n\n    const updatedState = {\n      cards: allCards,\n      boards: {\n        ...this.state.boards,\n        [board.id]: board,\n      },\n    };\n\n    this.setState(updatedState, () => {\n      console.log(\"Saved New Board!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  // ==============================================\n  // BOARD UPDATES\n  // ==============================================\n  handleAddBoard = (board) => {\n    const updatedBoards = {\n      boards: { ...this.state.boards, [board.id]: board },\n      boardOrder: [...this.state.boardOrder, board.id],\n    };\n    this.setState(updatedBoards, () => {\n      console.log(\"Saved New Board!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  handleClearBoard = (boardId) => {\n    const board = this.state.boards[boardId];\n    const boardCards = board.cards.slice();\n    let allCards = this.state.cards;\n\n    boardCards.forEach((cardId) => {\n      delete allCards[cardId];\n      board.cards.pop();\n    });\n\n    const updatedState = {\n      ...this.state,\n      cards: allCards,\n      boards: {\n        ...this.state.boards,\n        [boardId]: board,\n      },\n    };\n\n    this.setState(updatedState, () => {\n      console.log(\"Saved Board Clear!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  handleEditBoard = (newBoardName, boardId) => {\n    const boardToUpdate = this.state.boards[boardId];\n    boardToUpdate.name = newBoardName;\n    const updatedBoards = {\n      ...this.state,\n      boards: { ...this.state.boards, [boardId]: boardToUpdate },\n    };\n    this.setState(updatedBoards);\n  };\n\n  handleDeleteBoard = (boardId) => {\n    const board = this.state.boards[boardId];\n    const boardCards = board.cards.slice();\n    let allCards = this.state.cards;\n\n    //delete board from boardOrder;\n    const boardOrder = this.state.boardOrder;\n    let boardOrderIndex = boardOrder.findIndex((boardID) => boardID === boardId);\n    boardOrder.splice(boardOrderIndex, 1);\n\n    //delete cards\n    boardCards.forEach((cardId) => {\n      delete allCards[cardId];\n      board.cards.pop();\n    });\n\n    //delete board from boards;\n    const boards = { ...this.state.boards };\n    delete boards[boardId];\n\n    const updatedState = {\n      ...this.state,\n      cards: allCards,\n      boards: boards,\n      boardOrder: boardOrder,\n    };\n\n    console.log(updatedState);\n\n    this.setState(updatedState, () => {\n      console.log(\"Saved Board Clear!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n  };\n\n  // ==============================================\n  // DRAG UPDATES\n  // ==============================================\n  onDragStart = (result) => {\n    console.log(\"User is dragging object \", result);\n  };\n\n  onDragEndBoard = (source, destination, draggableId) => {\n    // Insert board into new location of array\n    const newBoardOrder = Array.from(this.state.boardOrder);\n    newBoardOrder.splice(source.index, 1);\n    newBoardOrder.splice(destination.index, 0, draggableId);\n\n    // New state after board dropped\n    const newState = {\n      ...this.state,\n      boardOrder: newBoardOrder,\n    };\n\n    this.setState(newState, () => {\n      console.log(\"Saved Changes to Board Position!\");\n      localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n    });\n\n    console.log(this.state);\n  };\n\n  onDragEndCard = (source, destination, draggableId) => {\n    const startBoard = this.state.boards[source.droppableId];\n    const endBoard = this.state.boards[destination.droppableId];\n\n    // User dragged and dropped to original board\n    if (startBoard === endBoard) {\n      // Remove card from old location and update to new\n      const newCardIds = Array.from(startBoard.cards);\n      newCardIds.splice(source.index, 1);\n      newCardIds.splice(destination.index, 0, draggableId);\n\n      const updatedBoard = {\n        ...startBoard,\n        cards: newCardIds,\n      };\n\n      const updatedState = {\n        ...this.state,\n        boards: {\n          ...this.state.boards,\n          [updatedBoard.id]: updatedBoard,\n        },\n      };\n\n      this.setState(updatedState, () => {\n        console.log(\"Saved Changes to Card Position!\");\n        localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n      });\n    }\n    // User dragged and dropped to new board\n    else {\n      const startBoardCardIds = Array.from(startBoard.cards);\n      startBoardCardIds.splice(source.index, 1);\n      const updatedStartBoard = {\n        ...startBoard,\n        cards: startBoardCardIds,\n      };\n\n      const endBoardCardIds = Array.from(endBoard.cards);\n      endBoardCardIds.splice(destination.index, 0, draggableId);\n      const updatedEndBoard = {\n        ...endBoard,\n        cards: endBoardCardIds,\n      };\n\n      const updatedState = {\n        ...this.state,\n        boards: {\n          ...this.state.boards,\n          [updatedStartBoard.id]: updatedStartBoard,\n          [updatedEndBoard.id]: updatedEndBoard,\n        },\n      };\n\n      this.setState(updatedState, () => {\n        console.log(\"Saved Changes to Card Position!\");\n        localStorage.setItem(\"kanban-state\", JSON.stringify(this.state));\n      });\n    }\n  };\n\n  onDragEnd = (result) => {\n    console.log(\"User has stopped dragging object \", result);\n    const { source, destination, draggableId, type } = result;\n\n    // User dropped card on non-droppable location\n    if (!destination) {\n      return;\n    }\n\n    // User dropped card to original location\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // User dragged and dropped a board\n    if (type === \"board\") {\n      this.onDragEndBoard(source, destination, draggableId);\n    }\n\n    // User dragged and dropped a card\n    if (type === \"card\") {\n      this.onDragEndCard(source, destination, draggableId);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {/* These two components stickied to top */}\n        <Header\n          handleAddBoard={this.handleAddBoard}\n          handleResetKanban={this.handleResetKanban}\n          handleImportFile={this.handleImportFile}\n          handleExportFile={this.handleExportFile}\n        ></Header>\n        {/* The rest is unstickied */}\n        <main>\n          <div\n            id=\"board-container\"\n            style={{\n              overflowX: \"auto !important\",\n              paddingLeft: \"32px\",\n            }}\n          >\n            <DragDropContext onDragStart={this.onDragStart} onDragEnd={this.onDragEnd}>\n              <Droppable droppableId=\"board-container\" type=\"board\" direction=\"horizontal\">\n                {(provided) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>\n                    {\n                      //  Generate all of the boards\n                      this.state.boardOrder.map((boardId, index) => {\n                        const board = this.state.boards[boardId];\n                        const cards = board.cards.map((cardId) => {\n                          const card = this.state.cards[cardId];\n                          const tags = card.tags.map((tagId) => this.state.tags[tagId]);\n                          return { ...card, tags: tags };\n                        });\n                        return (\n                          <Board\n                            key={board.id}\n                            board={board}\n                            cards={cards}\n                            handleAddCard={this.handleAddCard}\n                            handleEditBoard={this.handleEditBoard}\n                            handleClearBoard={this.handleClearBoard}\n                            handleDeleteBoard={this.handleDeleteBoard}\n                            handleUpdateCard={this.handleUpdateCard}\n                            handleDeleteCard={this.handleDeleteCard}\n                            handleUpdatePins={this.handleUpdatePins}\n                            index={index}\n                          />\n                        );\n                      })\n                    }\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        </main>\n        <ModalContainer handleClearBoard={this.handleClearBoard}></ModalContainer>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}